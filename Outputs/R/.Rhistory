AgeRichMean = mean(Age_Richness), AgeRichSd = sd(Age_Richness)*InvBessel)
VarStack = stack(BAU_AR0Mean, BAU_AR100Mean, Adapty_AR100Mean, ProAct_AR100Mean)
Title = "Number of unique ages"
Max = max(maxValue(VarStack))
Min = min(minValue(VarStack))
brks = seq(Min,Max,by=0.1)
nbrks = length(brks)-1
r.range = c(Min, Max)
rasTot = raster(ncol=2, nrow=1)
values(rasTot) = c(Min,Max)
par(mfrow=c(1,3), mar=c(4.1, 0, 4.1, 10.1))
plot(VarStack, breaks=brks,col=pal.3(nbrks), legend = F, zlim=c(Min,Max),
main = names(VarStack))
plot(rasTot, legend.only=TRUE, col=pal.3(nbrks),
legend.width=1, legend.shrink=0.75,
legend.args=list(text=Title, side=4, font=2, line=2.5, cex=0.8))
VarStack = stack(BAU_AR100Sd, Adapty_AR100Sd, ProAct_AR100Sd)
Title = "Standard deviation on species richness"
Max = max(maxValue(VarStack))
Min = min(minValue(VarStack))
brks = seq(Min,Max,by=0.1)
nbrks = length(brks)-1
r.range = c(Min, Max)
rasTot = raster(ncol=2, nrow=1)
values(rasTot) = c(Min,Max)
par(mfrow=c(1,3), mar=c(4.1, 0, 4.1, 10.1))
plot(VarStack, breaks=brks,col=pal.sd(nbrks), legend = F, zlim=c(Min,Max),
main = names(VarStack))
plot(rasTot, legend.only=TRUE, col=pal.sd(nbrks),
legend.width=1, legend.shrink=0.75,
legend.args=list(text=Title, side=4, font=2, line=2.5, cex=0.8))
ggplot(Biodiv_AggT, aes(x=Year, y=SppRichMean, col=Scenario, group=Scenario)) +
geom_line(size = 1)+
geom_errorbar(aes(ymin=SppRichMean-SppRichSd, ymax=SppRichMean+SppRichSd)) +
xlab("Time (years)") +
ylab("Number of species") +
ggtitle("Evolution of number of species per cell on different scenarios") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(Biodiv_AggT, aes(x=Year, y=AgeRichMean, col=Scenario, group=Scenario)) +
geom_line(size = 1)+
xlab("Time (years)") +
ylab("Number of unique ages") +
ggtitle("Evolution of age richness per cell on different scenarios") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(Biodiv_AggT, aes(x=Year, y=AgeRichMean, col=Scenario, group=Scenario)) +
geom_line(size = 1)+
geom_errorbar(aes(ymin=AgeRichMean-AgeRichSd, ymax=AgeRichMean+AgeRichSd)) +
xlab("Time (years)") +
ylab("Number of unique ages") +
ggtitle("Evolution of age richness per cell on different scenarios") +
theme(plot.title = element_text(hjust = 0.5))
Mortality = data.frame()
for(j in c(1,2)){
if(j == 1) { run = "..1"
} else { run = "..2"}
for(scenario in ListScenario){
if(scenario == "Business as usual") {Input = BAU_input
} else if(scenario == "Adaptability"){Input = Adapty_input
} else {Input = ProAct_input}
BDA_Tot = paste0(Input, run, "/bda_log.csv") %>% read.csv()
BDA = cbind(BDA_Tot$Time, BDA_Tot$TotalBiomassMortality) %>% as.data.frame()
colnames(BDA) = c("Time", "Mortality")
BDA = aggregate(BDA$Mortality, by=list(Time=BDA$Time), FUN=sum)
colnames(BDA) = c("Time", "Mortality")
BDA$Mortality = BDA$Mortality*10^-6 # convertion g/m² to Mg/m²
for(i in (1:100)){ # years without insect outbreak are added with a mortality of 0
if(!(i %in% BDA$Time)){
BDA = rbind(BDA, c(i,0))
}
}
BDA$Disturbance = "Insects"
BDA$Scenario = scenario
BDA$Run = j
scrapple_Tot = paste0(Input, run, "/scrapple-summary-log.csv") %>% read.csv()
scrapple_Acc = cbind(scrapple_Tot$SimulationYear,
scrapple_Tot$TotalBiomassMortalityAccidental) %>% as.data.frame()
colnames(scrapple_Acc) = c("Time", "Mortality")
scrapple_Acc$Mortality = scrapple_Acc$Mortality*10^-6
scrapple_Acc$Disturbance = "Fire accidental"
scrapple_Acc$Scenario = scenario
scrapple_Acc$Run = j
scrapple_Nat = cbind(scrapple_Tot$SimulationYear,
scrapple_Tot$TotalBiomassMortalityLightning) %>% as.data.frame()
colnames(scrapple_Nat) = c("Time", "Mortality")
scrapple_Nat$Disturbance = "Fire lightning"
scrapple_Nat$Scenario = scenario
scrapple_Nat$Run = j
scrapple_Nat$Mortality = scrapple_Nat$Mortality*10^-6
Harvest_Tot =  paste0(Input, run, "/harvest/summary-log.csv") %>% read.csv()
Harvest = Harvest_Tot %>% group_by(Time) %>%
summarise(TotalBiomassHarvested = sum(TotalBiomassHarvested))
colnames(Harvest) = c("Time", "Mortality")
Harvest$Mortality = Harvest$Mortality %>% as.numeric()
Harvest$Mortality = Harvest$Mortality*10^-4 # convertion Mg/ha in Mg/m²
Harvest$Disturbance = "Harvest"
Harvest$Scenario = scenario
Harvest$Run = j
Mortality = rbind(Mortality, BDA, scrapple_Acc, scrapple_Nat, Harvest)
}
}
kable(as.data.frame(head(Mortality)), caption = "Insight of the data used concerning mortality")
Mortality_Sum = Mortality %>% group_by(Disturbance, Scenario, Run) %>%
summarise(MortalitySum = sum(Mortality))
InvBessel = (ncol(Mortality_Sum)-1)/ncol(Mortality_Sum) %>% sqrt()
Mortality_Agg = Mortality_Sum %>% group_by(Disturbance, Scenario) %>%
summarise(MortalityMean = mean(MortalitySum), MortalitySd = sd(MortalitySum)*InvBessel)
Mortality_AggT = Mortality
Mortality_AggT$Disturbance[which(Mortality_AggT$Disturbance != "Harvest")] = "Other disturbances"
Mortality_AggT = Mortality_AggT %>% group_by(Time, Disturbance, Scenario, Run) %>%
summarise(MortalitySum = sum(Mortality))
Mortality_AggT = Mortality_AggT %>% group_by(Time, Disturbance, Scenario) %>%
summarise(MortalityMean = mean(MortalitySum), MortalitySd = sd(MortalitySum)*InvBessel)
kable(as.data.frame(Mortality_Agg), caption = "Mortality depending on the scenario")
ggplot(Mortality_Agg, aes(x=Disturbance, y=MortalityMean, fill = Disturbance)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
xlab("Type of Disturbance") +
ylab("Mortality in biomass(Mg.m-2)") +
ggtitle("Total mortality by scenario and disturbancy") +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~Scenario, ncol=3)
Mortality = data.frame()
for(j in c(1,2)){
if(j == 1) { run = "..1"
} else { run = "..2"}
for(scenario in ListScenario){
if(scenario == "Business as usual") {Input = BAU_input
} else if(scenario == "Adaptability"){Input = Adapty_input
} else {Input = ProAct_input}
BDA_Tot = paste0(Input, run, "/bda_log.csv") %>% read.csv()
BDA = cbind(BDA_Tot$Time, BDA_Tot$TotalBiomassMortality) %>% as.data.frame()
colnames(BDA) = c("Time", "Mortality")
BDA = aggregate(BDA$Mortality, by=list(Time=BDA$Time), FUN=sum)
colnames(BDA) = c("Time", "Mortality")
BDA$Mortality = BDA$Mortality*10^-6 # convertion g/m² to Mg/m²
for(i in (1:100)){ # years without insect outbreak are added with a mortality of 0
if(!(i %in% BDA$Time)){
BDA = rbind(BDA, c(i,0))
}
}
BDA$Disturbance = "Insects"
BDA$Scenario = scenario
BDA$Run = j
scrapple_Tot = paste0(Input, run, "/scrapple-summary-log.csv") %>% read.csv()
scrapple_Acc = cbind(scrapple_Tot$SimulationYear,
scrapple_Tot$TotalBiomassMortalityAccidental) %>% as.data.frame()
colnames(scrapple_Acc) = c("Time", "Mortality")
scrapple_Acc$Mortality = scrapple_Acc$Mortality %>% multiply_by(10^-6)
scrapple_Acc$Disturbance = "Fire accidental"
scrapple_Acc$Scenario = scenario
scrapple_Acc$Run = j
scrapple_Nat = cbind(scrapple_Tot$SimulationYear,
scrapple_Tot$TotalBiomassMortalityLightning) %>% as.data.frame()
colnames(scrapple_Nat) = c("Time", "Mortality")
scrapple_Nat$Disturbance = "Fire lightning"
scrapple_Nat$Scenario = scenario
scrapple_Nat$Run = j
scrapple_Nat$Mortality = scrapple_Nat$Mortality*10^-6
Harvest_Tot =  paste0(Input, run, "/harvest/summary-log.csv") %>% read.csv()
Harvest = Harvest_Tot %>% group_by(Time) %>%
summarise(TotalBiomassHarvested = sum(TotalBiomassHarvested))
colnames(Harvest) = c("Time", "Mortality")
Harvest$Mortality = Harvest$Mortality %>% as.numeric()
Harvest$Mortality = Harvest$Mortality*10^-4 # convertion Mg/ha in Mg/m²
Harvest$Disturbance = "Harvest"
Harvest$Scenario = scenario
Harvest$Run = j
Mortality = rbind(Mortality, BDA, scrapple_Acc, scrapple_Nat, Harvest)
}
}
kable(as.data.frame(head(Mortality)), caption = "Insight of the data used concerning mortality")
Mortality_Sum = Mortality %>% group_by(Disturbance, Scenario, Run) %>%
summarise(MortalitySum = sum(Mortality))
InvBessel = (ncol(Mortality_Sum)-1)/ncol(Mortality_Sum) %>% sqrt()
Mortality_Agg = Mortality_Sum %>% group_by(Disturbance, Scenario) %>%
summarise(MortalityMean = mean(MortalitySum), MortalitySd = sd(MortalitySum)*InvBessel)
Mortality_AggT = Mortality
Mortality_AggT$Disturbance[which(Mortality_AggT$Disturbance != "Harvest")] = "Other disturbances"
Mortality_AggT = Mortality_AggT %>% group_by(Time, Disturbance, Scenario, Run) %>%
summarise(MortalitySum = sum(Mortality))
Mortality_AggT = Mortality_AggT %>% group_by(Time, Disturbance, Scenario) %>%
summarise(MortalityMean = mean(MortalitySum), MortalitySd = sd(MortalitySum)*InvBessel)
kable(as.data.frame(Mortality_Agg), caption = "Mortality depending on the scenario")
ggplot(Mortality_Agg, aes(x=Disturbance, y=MortalityMean, fill = Disturbance)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
xlab("Type of Disturbance") +
ylab("Mortality in biomass(Mg.m-2)") +
ggtitle("Total mortality by scenario and disturbancy") +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1)) +
facet_wrap(~Scenario, ncol=3)
NEEC = data.frame()
for(j in c(1,2)){
if(j == 1) { run = "..1"
} else { run = "..2"}
for(scenario in ListScenario){
if(scenario == "Business as usual") {Input = BAU_input
} else if(scenario == "Adaptability"){Input = Adapty_input
} else {Input = ProAct_input}
NECNlog = paste0(Input, run, "/NECN-succession-log.csv") %>% read.csv()
NEEClog = aggregate(NECNlog$NEEC, by=list(Time=NECNlog$Time), FUN=sum)
NEEClog$NEEC = NEEClog$NEEC*10^-6
colnames(NEEClog) = c("Time","NEEC")
NEEClog$Scenario = scenario
NEEClog$Run = j
NEEC = rbind(NEEC,NEEClog)
}
}
View(NEEClog)
NEEC = data.frame()
for(j in c(1,2)){
if(j == 1) { run = "..1"
} else { run = "..2"}
for(scenario in ListScenario){
if(scenario == "Business as usual") {Input = BAU_input
} else if(scenario == "Adaptability"){Input = Adapty_input
} else {Input = ProAct_input}
NECNlog = paste0(Input, run, "/NECN-succession-log.csv") %>% read.csv()
NEEClog = aggregate(NECNlog$NEEC, by=list(Time=NECNlog$Time), FUN=sum)
colnames(NEEClog) = c("Time","NEEC")
NEEClog$NEEC = NEEClog$NEEC*10^-6
NEEClog$Scenario = scenario
NEEClog$Run = j
NEEC = rbind(NEEC,NEEClog)
}
}
kable(as.data.frame(head(NEEC)), caption = "Insight of the data used concerning the Net Ecosystem Exchange of Carbon")
NEEC_Sum = NEEC %>% group_by(Scenario, Run) %>%
summarise(NEECSum = sum(NEEC))
InvBessel = (ncol(NEEC)-1)/ncol(NEEC_Sum) %>% sqrt()
NEEC_Agg = NEEC_Sum %>% group_by(Scenario) %>%
summarise(NEECMean = mean(NEECSum), NEECSd = sd(NEECSum)*InvBessel)
NEEC_AggT = NEEC %>% group_by(Time, Scenario) %>%
summarise(NEECMean = mean(NEEC), NEECSd = sd(NEEC)*InvBessel)
ggplot(NEEC_AggT, aes(x=Time, y=NEECMean, col=Scenario, group=Scenario)) +
geom_line(size = 1)+
geom_errorbar(aes(ymin=NEECMean-NEECSd, ymax=NEECMean+NEECSd)) +
xlab("Time (years)") +
ylab("NEEC(Mg.m-2.yr-1)") +
ggtitle("Evolution of Net Ecosystem Exchange of Carbon") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(NEEC_Agg, aes(x=Scenario, y=NEECMean, fill=Scenario)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=NEECMean-NEECSd, ymax=NEECMean+NEECSd)) +
ylab("NEEC (Mg.m-2)") +
ggtitle("Total Net Ecosystem Exchange of Carbon") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(NEEC_Agg, aes(x=Scenario, y=abs(NEECMean), fill=Scenario)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=NEECMean-NEECSd, ymax=NEECMean+NEECSd)) +
ylab("NEEC (Mg.m-2)") +
ggtitle("Total Net Ecosystem Exchange of Carbon") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(NEEC_Agg, aes(x=Scenario, y=abs(NEECMean), fill=Scenario)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=abs(NEECMean)-NEECSd, ymax=abs(NEECMean)+NEECSd)) +
ylab("NEEC (Mg.m-2)") +
ggtitle("Total Net Ecosystem Exchange of Carbon") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(NEEC_Agg, aes(x=Scenario, y=abs(NEECMean), fill=Scenario)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=abs(NEECMean)-NEECSd, ymax=abs(NEECMean)+NEECSd)) +
ylab("|NEEC| (Mg.m-2)") +
ggtitle("Total Carbon stocked") +
theme(plot.title = element_text(hjust = 0.5))
tinytex::reinstall_tinytex()
wd = "D:/Internship 3A/GitHub/Project-Klamath-2021/Outputs/R"
setwd(wd)
library(raster)
library(rgdal)
library(devtools)
library(sf)
library(nngeo)
library(ggplot2)
library(ggrepel)
library(cowplot)
#install_github("jeffreyevans/spatialEco")
library(spatialEco)
library(magrittr)
library(svMisc)
wd = "D:/Internship 3A/GitHub/Project-Klamath-2021/Outputs/R"
setwd(wd)
library(magrittr)
library(cowplot)
library(ggplot2)
library(raster)
library(knitr)
library(tibble)
library(dplyr)
Rege = data.frame()
for(j in c(1,2)){
if(j == 1) { run = "..1"
} else { run = "..2"}
for(scenario in ListScenario){
if(scenario == "Business as usual") {Input = BAU_input
} else if(scenario == "Adaptability"){Input = Adapty_input
} else {Input = ProAct_input}
Reprolog = paste0(Input, run, "/NECN-reproduction-log.csv") %>% read.csv()
Reprolog$NbEvents = Reprolog$NumCohortsSerotiny +
Reprolog$NumCohortsResprout + Reprolog$NumCohortsSeed
Repro = cbind(Reprolog$Time, Reprolog$NbEvents) %>% as.data.frame()
colnames(Repro) = c("Time", "NbEvents")
Repro$Scenario = scenario
Repro$Run = j
Rege = rbind(Rege,Repro)
}
}
Rege$NbEvents = Rege$NbEvents %>% as.character() %>% as.numeric()
Rege_Sum = Rege %>% group_by(Scenario, Run) %>%
summarise(NbEventsTot = sum(NbEvents))
Rege_Agg = Rege_Sum %>% group_by(Scenario) %>%
summarise(NbEventsMean = mean(NbEventsTot), NbEventsSd = sd(NbEventsTot)*InvBessel)
Rege_AggT = Rege %>% group_by(Time, Scenario) %>%
summarise(NbEventsMean = mean(NbEvents), NbEventsSd = sd(NbEvents)*InvBessel)
ggplot(Rege_Agg, aes(x=Scenario, y=NbEventsMean, fill=Scenario)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=NbEventsMean-NbEventsSd, ymax=NbEventsMean+NbEventsSd)) +
ylab("Total number of reproduction event (without planting)") +
ggtitle("Total number of reproduction events by scenario") +
theme(plot.title = element_text(hjust = 0.5))
kable(as.data.frame(Rege_Agg),
caption = "Total number of reproduction event (without planting)")
VarStack = stack(BAU_SR100Sd, Adapty_SR100Sd, ProAct_SR100Sd)
Title = "Standard deviation on number of species"
Max = max(maxValue(VarStack))
Min = min(minValue(VarStack))
brks = seq(Min,Max,by=0.1)
nbrks = length(brks)-1
r.range = c(Min, Max)
rasTot = raster(ncol=2, nrow=1)
values(rasTot) = c(Min,Max)
par(mfrow=c(1,3), mar=c(4.1, 0, 4.1, 10.1))
plot(VarStack, breaks=brks,col=pal.sd(nbrks), legend = F, zlim=c(Min,Max),
main = names(VarStack))
plot(rasTot, legend.only=TRUE, col=pal.sd(nbrks),
legend.width=1, legend.shrink=0.75,
legend.args=list(text=Title, side=4, font=2, line=2.5, cex=0.8))
for(i in (1:3)){
writeRaster(VarStack[[i]],
filename =  paste0("D:/Internship 3A/Rasters/Diversity/",names(VarStack[[i]]),".tif"),
format = "GTiff", datatype ="FLT4S",overwrite=T)
}
VarStack = stack(BAU_AR0Mean, BAU_AR100Mean, Adapty_AR100Mean, ProAct_AR100Mean)
Title = "Number of unique ages"
Max = max(maxValue(VarStack))
Min = min(minValue(VarStack))
brks = seq(Min,Max,by=0.1)
nbrks = length(brks)-1
r.range = c(Min, Max)
rasTot = raster(ncol=2, nrow=1)
values(rasTot) = c(Min,Max)
par(mfrow=c(1,3), mar=c(4.1, 0, 4.1, 10.1))
plot(VarStack, breaks=brks,col=pal.3(nbrks), legend = F, zlim=c(Min,Max),
main = names(VarStack))
plot(rasTot, legend.only=TRUE, col=pal.3(nbrks),
legend.width=1, legend.shrink=0.75,
legend.args=list(text=Title, side=4, font=2, line=2.5, cex=0.8))
VarStack = stack(BAU_AR100Sd, Adapty_AR100Sd, ProAct_AR100Sd)
Title = "Standard deviation on species richness"
Max = max(maxValue(VarStack))
Min = min(minValue(VarStack))
brks = seq(Min,Max,by=0.1)
nbrks = length(brks)-1
r.range = c(Min, Max)
rasTot = raster(ncol=2, nrow=1)
values(rasTot) = c(Min,Max)
par(mfrow=c(1,3), mar=c(4.1, 0, 4.1, 10.1))
plot(VarStack, breaks=brks,col=pal.sd(nbrks), legend = F, zlim=c(Min,Max),
main = names(VarStack))
plot(rasTot, legend.only=TRUE, col=pal.sd(nbrks),
legend.width=1, legend.shrink=0.75,
legend.args=list(text=Title, side=4, font=2, line=2.5, cex=0.8))
wd = "D:/Internship 3A/GitHub/Project-Klamath-2021/Outputs/R"
setwd(wd)
library(magrittr)
library(cowplot)
library(ggplot2)
library(raster)
library(knitr)
library(tibble)
library(dplyr)
Ownership_OnlyCA = raster("D:/Internship 3A/GitHub/Project-Klamath-2021/Model Parameterization/
R inputs and outputs/Ownership_OnlyCA.tif")
Ownership_OnlyCA = raster("D:/Internship 3A/GitHub/Project-Klamath-2021/Model Parameterization/R inputs and outputs/Ownership_OnlyCA.tif")
CRSRef = crs(Ownership_OnlyCA)
NrowRef = Ownership_OnlyCA@nrows
NcolRef = Ownership_OnlyCA@ncols
ResRef = res(Ownership_OnlyCA)[1]
XminRef = Ownership_OnlyCA@extent@xmin
XmaxRef = Ownership_OnlyCA@extent@xmax
YminRef = Ownership_OnlyCA@extent@ymin
YmaxRef = Ownership_OnlyCA@extent@ymax
VarStack = stack(BAU_NatFMean, Adapty_NatFMean, ProAct_NatFMean)
Max = max(maxValue(VarStack))
Min = min(minValue(VarStack))
brks = seq(Min,Max,by=0.1)
nbrks = length(brks)-1
r.range = c(Min, Max)
rasTot = raster(ncol=2, nrow=1)
values(rasTot) = c(Min,Max)
par(mfrow=c(1,3), mar=c(4.1, 0, 4.1, 10.1))
plot(VarStack, breaks=brks,col=pal.3(nbrks), legend = F, zlim=c(Min,Max))
plot(rasTot, legend.only=TRUE, col=pal.3(nbrks),
legend.width=1, legend.shrink=0.75,
legend.args=list(text="Proportion of years with natural fire",
side=4, font=2, line=2.5, cex=0.8))
for(i in (1:3)){
export = raster(vals=getValues(VarStack[[i]]),
nrow=NrowRef,ncol=NcolRef,resolution=ResRef,
xmn=XminRef, xmx=XmaxRef,ymn =YminRef,ymx=YmaxRef,crs=CRSRef)
writeRaster(export,
filename =  paste0("D:/Internship 3A/Rasters/Fire/",names(VarStack[[i]]),".tif"),
format = "GTiff", datatype ="FLT4S",overwrite=T)
}
VarStack = stack(BAU_SR100Sd, Adapty_SR100Sd, ProAct_SR100Sd)
Title = "Standard deviation on number of species"
Max = max(maxValue(VarStack))
Min = min(minValue(VarStack))
brks = seq(Min,Max,by=0.1)
nbrks = length(brks)-1
r.range = c(Min, Max)
rasTot = raster(ncol=2, nrow=1)
values(rasTot) = c(Min,Max)
par(mfrow=c(1,3), mar=c(4.1, 0, 4.1, 10.1))
plot(VarStack, breaks=brks,col=pal.sd(nbrks), legend = F, zlim=c(Min,Max),
main = names(VarStack))
plot(rasTot, legend.only=TRUE, col=pal.sd(nbrks),
legend.width=1, legend.shrink=0.75,
legend.args=list(text=Title, side=4, font=2, line=2.5, cex=0.8))
for(i in (1:3)){
export = raster(vals=getValues(VarStack[[i]]),
nrow=NrowRef,ncol=NcolRef,resolution=ResRef,
xmn=XminRef, xmx=XmaxRef,ymn =YminRef,ymx=YmaxRef,crs=CRSRef)
writeRaster(export,
filename =  paste0("D:/Internship 3A/Rasters/Fire/",names(VarStack[[i]]),".tif"),
format = "GTiff", datatype ="FLT4S",overwrite=T)
}
VarStack = stack(BAU_SR100Sd, Adapty_SR100Sd, ProAct_SR100Sd)
Title = "Standard deviation on number of species"
Max = max(maxValue(VarStack))
Min = min(minValue(VarStack))
brks = seq(Min,Max,by=0.1)
nbrks = length(brks)-1
r.range = c(Min, Max)
rasTot = raster(ncol=2, nrow=1)
values(rasTot) = c(Min,Max)
par(mfrow=c(1,3), mar=c(4.1, 0, 4.1, 10.1))
plot(VarStack, breaks=brks,col=pal.sd(nbrks), legend = F, zlim=c(Min,Max),
main = names(VarStack))
plot(rasTot, legend.only=TRUE, col=pal.sd(nbrks),
legend.width=1, legend.shrink=0.75,
legend.args=list(text=Title, side=4, font=2, line=2.5, cex=0.8))
for(i in (1:3)){
export = raster(vals=getValues(VarStack[[i]]),
nrow=NrowRef,ncol=NcolRef,resolution=ResRef,
xmn=XminRef, xmx=XmaxRef,ymn =YminRef,ymx=YmaxRef,crs=CRSRef)
writeRaster(export,
filename =  paste0("D:/Internship 3A/Rasters/Diversity/",names(VarStack[[i]]),".tif"),
format = "GTiff", datatype ="FLT4S",overwrite=T)
}
VarStack = stack(BAU_NatFMean, Adapty_NatFMean, ProAct_NatFMean)
Max = max(maxValue(VarStack))
Min = min(minValue(VarStack))
brks = seq(Min,Max,by=0.1)
nbrks = length(brks)-1
r.range = c(Min, Max)
rasTot = raster(ncol=2, nrow=1)
values(rasTot) = c(Min,Max)
par(mfrow=c(1,3), mar=c(4.1, 0, 4.1, 10.1))
plot(VarStack, breaks=brks,col=pal.3(nbrks), legend = F, zlim=c(Min,Max))
plot(rasTot, legend.only=TRUE, col=pal.3(nbrks),
legend.width=1, legend.shrink=0.75,
legend.args=list(text="Proportion of years with natural fire",
side=4, font=2, line=2.5, cex=0.8))
for(i in (1:3)){
export = raster(vals=getValues(VarStack[[i]]),
nrow=NrowRef,ncol=NcolRef,resolution=ResRef,
xmn=XminRef, xmx=XmaxRef,ymn =YminRef,ymx=YmaxRef,crs=CRSRef)
writeRaster(export,
filename =  paste0("D:/Internship 3A/Rasters/Fire/",names(VarStack[[i]]),".tif"),
format = "GTiff", datatype ="FLT4S",overwrite=T)
}
wd = "D:/Internship 3A/GitHub/Project-Klamath-2021/Outputs/R"
setwd(wd)
library(raster)
library(rgdal)
library(devtools)
library(sf)
library(nngeo)
library(ggplot2)
library(ggrepel)
library(cowplot)
#install_github("jeffreyevans/spatialEco")
library(spatialEco)
library(magrittr)
library(svMisc)
ggplot(ResultSp, aes(x=Migration_x, y=Migration_y, label=Name)) +
geom_point() +
geom_point(data=TotBiom, colour="red")+
scale_x_continuous(name= "West-Est Migration") +
scale_y_continuous(name = "North-South Migration") +
ggtitle(" Figure 3 : Centroid difference of position by species
after 100 years (BAU vs adaptability)") +
theme(plot.title = element_text(hjust = 0.5)) +
#  geom_label_repel() +
annotate("text", x = -20000, y = -55000, label = "Red : total biomass",
colour = "red", fontface="italic") +
facet_wrap(~Scenario)
TotBiom = subset(Results, Name == "TotalBiomass")
Results = as.data.frame(Results)
