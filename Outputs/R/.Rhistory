facet_wrap(~Scenario, ncol=1)
ggplot(Mortality, aes(x=Disturbancy, y=MortalityMean, fill = Disturbancy)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=Mortality-MortalitySd, ymax=Mortality+MortalitySd)) +
xlab("Type of disturbancy") +
ylab("Mortality in biomass") +
ggtitle("Total mortality by scenario") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~Scenario, ncol=3)
ggplot(Mortality, aes(x=Time, y=MortalityMean, col=Disturbancy, group=Disturbancy)) +
geom_line()+
#  geom_area(aes(fill=Disturbancy)) +
xlab("Time (years)") +
ylab("Mortality in biomass") +
ggtitle("Evolution of mortality due to disturbancies on different scenarios") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~Scenario, ncol=1)
ggplot(Mortality, aes(x=Disturbancy, y=MortalityMean, fill = Disturbancy)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
xlab("Type of disturbancy") +
ylab("Mortality in biomass") +
ggtitle("Total mortality by scenario") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~Scenario, ncol=3)
ggplot(Mortality, aes(x=Time, y=MortalityMean, col=Disturbancy, group=Disturbancy)) +
geom_line()+
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
xlab("Time (years)") +
ylab("Mortality in biomass") +
ggtitle("Evolution of mortality due to disturbancies on different scenarios") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~Scenario, ncol=1)
ggplot(Mortality_Agg, aes(x=Disturbancy, y=MortalitySum, fill = Disturbancy)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
xlab("Type of disturbancy") +
ylab("Mortality in biomass") +
ggtitle("Total mortality by scenario") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~Scenario, ncol=3)
Mortality_Agg = Mortality %>% group_by(Disturbancy, Scenario) %>%
summarise(MortalityMean = mean(Mortality),
MortalitySum = sum(Mortality), MortalitySd = sd(Mortality))
Mortality = data.frame()
for(j in c(1,2)){
if(j == 1) { run = "..1"
} else { run = "..2"}
for(scenario in ListScenario){
if(scenario == "BAU") {Input = BAU_input
} else if(scenario == "Adapty"){Input = Adapty_input
} else {Input = ProAct_input}
BDA_Tot = paste(Input, run, "/bda_log.csv",sep="") %>% read.csv()
BDA = cbind(BDA_Tot$Time, BDA_Tot$TotalBiomassMortality) %>% as.data.frame()
colnames(BDA) = c("Time", "Mortality")
BDA = aggregate(BDA$Mortality, by=list(Time=BDA$Time), FUN=sum)
colnames(BDA) = c("Time", "Mortality")
for(i in (1:100)){
if(!(i %in% BDA$Time)){
BDA = rbind(BDA, c(i,0))
}
}
BDA$Disturbancy = "Insects"
BDA$Scenario = scenario
BDA$Run = j
scrapple_Tot = paste(Input, run, "/scrapple-summary-log.csv", sep="") %>% read.csv()
scrapple_Acc = cbind(scrapple_Tot$SimulationYear,
scrapple_Tot$TotalBiomassMortalityAccidental) %>% as.data.frame()
colnames(scrapple_Acc) = c("Time", "Mortality")
scrapple_Acc$Disturbancy = "Fire accidental"
scrapple_Acc$Scenario = scenario
scrapple_Acc$Run = j
scrapple_Nat = cbind(scrapple_Tot$SimulationYear,
scrapple_Tot$TotalBiomassMortalityLightning) %>% as.data.frame()
colnames(scrapple_Nat) = c("Time", "Mortality")
scrapple_Nat$Disturbancy = "Fire lightning"
scrapple_Nat$Scenario = scenario
scrapple_Nat$Run = j
Harvest_Tot =  paste(Input, run, "/harvest/summary-log.csv",sep="") %>% read.csv()
Harvest = Harvest_Tot %>% group_by(Time) %>%
summarise(TotalBiomassHarvested = sum(TotalBiomassHarvested))
colnames(Harvest) = c("Time", "Mortality")
Harvest$Mortality = Harvest$Mortality %>% as.numeric()
Harvest$Mortality = Harvest$Mortality*100 # convertion Mg/ha in g/m²
Harvest$Disturbancy = "Harvest"
Harvest$Scenario = scenario
Harvest$Run = j
Mortality = rbind(Mortality, BDA, scrapple_Acc, scrapple_Nat, Harvest)
}
}
Mortality_Agg = Mortality %>% group_by(Disturbancy, Scenario) %>%
summarise(MortalityMean = mean(Mortality),
MortalitySum = sum(Mortality), MortalitySd = sd(Mortality))
Mortality = Mortality %>% group_by(Time, Disturbancy, Scenario) %>%
summarise(MortalityMean = mean(Mortality), MortalitySd = sd(Mortality))
ggplot(Mortality, aes(x=Time, y=MortalityMean, col=Disturbancy, group=Disturbancy)) +
geom_line()+
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
xlab("Time (years)") +
ylab("Mortality in biomass") +
ggtitle("Evolution of mortality due to disturbancies on different scenarios") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~Scenario, ncol=1)
ggplot(Mortality_Agg, aes(x=Disturbancy, y=MortalitySum, fill = Disturbancy)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
xlab("Type of disturbancy") +
ylab("Mortality in biomass") +
ggtitle("Total mortality by scenario") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~Scenario, ncol=3)
ggplot(Mortality_Agg, aes(x=Disturbancy, y=MortalitySum, fill = Disturbancy)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=MortalitySum-MortalitySd, ymax=MortalityMean+MortalitySd)) +
xlab("Type of disturbancy") +
ylab("Mortality in biomass") +
ggtitle("Total mortality by scenario") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~Scenario, ncol=3)
ggplot(Mortality_Agg, aes(x=Disturbancy, y=MortalitySum, fill = Disturbancy)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=MortalitySum-MortalitySd, ymax=MortalitySum+MortalitySd)) +
xlab("Type of disturbancy") +
ylab("Mortality in biomass") +
ggtitle("Total mortality by scenario") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~Scenario, ncol=3)
Mortality_Agg = Mortality %>% group_by(Disturbancy, Scenario) %>%
summarise(MortalityMean = mean(Mortality), MortalitySd = sd(Mortality))
Mortality = data.frame()
for(j in c(1,2)){
if(j == 1) { run = "..1"
} else { run = "..2"}
for(scenario in ListScenario){
if(scenario == "BAU") {Input = BAU_input
} else if(scenario == "Adapty"){Input = Adapty_input
} else {Input = ProAct_input}
BDA_Tot = paste(Input, run, "/bda_log.csv",sep="") %>% read.csv()
BDA = cbind(BDA_Tot$Time, BDA_Tot$TotalBiomassMortality) %>% as.data.frame()
colnames(BDA) = c("Time", "Mortality")
BDA = aggregate(BDA$Mortality, by=list(Time=BDA$Time), FUN=sum)
colnames(BDA) = c("Time", "Mortality")
for(i in (1:100)){
if(!(i %in% BDA$Time)){
BDA = rbind(BDA, c(i,0))
}
}
BDA$Disturbancy = "Insects"
BDA$Scenario = scenario
BDA$Run = j
scrapple_Tot = paste(Input, run, "/scrapple-summary-log.csv", sep="") %>% read.csv()
scrapple_Acc = cbind(scrapple_Tot$SimulationYear,
scrapple_Tot$TotalBiomassMortalityAccidental) %>% as.data.frame()
colnames(scrapple_Acc) = c("Time", "Mortality")
scrapple_Acc$Disturbancy = "Fire accidental"
scrapple_Acc$Scenario = scenario
scrapple_Acc$Run = j
scrapple_Nat = cbind(scrapple_Tot$SimulationYear,
scrapple_Tot$TotalBiomassMortalityLightning) %>% as.data.frame()
colnames(scrapple_Nat) = c("Time", "Mortality")
scrapple_Nat$Disturbancy = "Fire lightning"
scrapple_Nat$Scenario = scenario
scrapple_Nat$Run = j
Harvest_Tot =  paste(Input, run, "/harvest/summary-log.csv",sep="") %>% read.csv()
Harvest = Harvest_Tot %>% group_by(Time) %>%
summarise(TotalBiomassHarvested = sum(TotalBiomassHarvested))
colnames(Harvest) = c("Time", "Mortality")
Harvest$Mortality = Harvest$Mortality %>% as.numeric()
Harvest$Mortality = Harvest$Mortality*100 # convertion Mg/ha in g/m²
Harvest$Disturbancy = "Harvest"
Harvest$Scenario = scenario
Harvest$Run = j
Mortality = rbind(Mortality, BDA, scrapple_Acc, scrapple_Nat, Harvest)
}
}
Mortality_Agg = Mortality %>% group_by(Disturbancy, Scenario) %>%
summarise(MortalityMean = mean(Mortality), MortalitySd = sd(Mortality))
Mortality = Mortality %>% group_by(Time, Disturbancy, Scenario) %>%
summarise(MortalityMean = mean(Mortality), MortalitySd = sd(Mortality))
ggplot(Mortality, aes(x=Time, y=MortalityMean, col=Disturbancy, group=Disturbancy)) +
geom_line()+
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
xlab("Time (years)") +
ylab("Mortality in biomass") +
ggtitle("Evolution of mortality due to disturbancies on different scenarios") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~Scenario, ncol=1)
ggplot(Mortality_Agg, aes(x=Disturbancy, y=MortalityMean, fill = Disturbancy)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
xlab("Type of disturbancy") +
ylab("Mortality in biomass") +
ggtitle("Total mortality by scenario") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~Scenario, ncol=3)
kable(as.data.frame(Mortality_Agg), caption = "Mortality depending on the scenario")
ggplot(Mortality_Agg[Mortality_Agg$Disturbancy=="Harvest",], aes(x=Scenario, y=MortalityMean, fill=Scenario)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
ylab("Biomass removed") +
ggtitle("Harvest by scenario") +
theme(plot.title = element_text(hjust = 0.5))
Mortality = data.frame()
for(j in c(1,2)){
if(j == 1) { run = "..1"
} else { run = "..2"}
for(scenario in ListScenario){
if(scenario == "BAU") {Input = BAU_input
} else if(scenario == "Adapty"){Input = Adapty_input
} else {Input = ProAct_input}
BDA_Tot = paste(Input, run, "/bda_log.csv",sep="") %>% read.csv()
BDA = cbind(BDA_Tot$Time, BDA_Tot$TotalBiomassMortality) %>% as.data.frame()
colnames(BDA) = c("Time", "Mortality")
BDA = aggregate(BDA$Mortality, by=list(Time=BDA$Time), FUN=sum)
colnames(BDA) = c("Time", "Mortality")
for(i in (1:100)){
if(!(i %in% BDA$Time)){
BDA = rbind(BDA, c(i,0))
}
}
BDA$Disturbancy = "Insects"
BDA$Scenario = scenario
BDA$Run = j
scrapple_Tot = paste(Input, run, "/scrapple-summary-log.csv", sep="") %>% read.csv()
scrapple_Acc = cbind(scrapple_Tot$SimulationYear,
scrapple_Tot$TotalBiomassMortalityAccidental) %>% as.data.frame()
colnames(scrapple_Acc) = c("Time", "Mortality")
scrapple_Acc$Disturbancy = "Fire accidental"
scrapple_Acc$Scenario = scenario
scrapple_Acc$Run = j
scrapple_Nat = cbind(scrapple_Tot$SimulationYear,
scrapple_Tot$TotalBiomassMortalityLightning) %>% as.data.frame()
colnames(scrapple_Nat) = c("Time", "Mortality")
scrapple_Nat$Disturbancy = "Fire lightning"
scrapple_Nat$Scenario = scenario
scrapple_Nat$Run = j
Harvest_Tot =  paste(Input, run, "/harvest/summary-log.csv",sep="") %>% read.csv()
Harvest = Harvest_Tot %>% group_by(Time) %>%
summarise(TotalBiomassHarvested = sum(TotalBiomassHarvested))
colnames(Harvest) = c("Time", "Mortality")
Harvest$Mortality = Harvest$Mortality %>% as.numeric()
Harvest$Mortality = Harvest$Mortality*100 # convertion Mg/ha in g/m²
Harvest$Disturbancy = "Harvest"
Harvest$Scenario = scenario
Harvest$Run = j
Mortality = rbind(Mortality, BDA, scrapple_Acc, scrapple_Nat, Harvest)
}
}
Mortality_Agg = Mortality %>% group_by(Disturbancy, Scenario) %>%
summarise(MortalityMean = mean(Mortality), MortalitySd = sd(Mortality))
Mortality_AggT = Mortality %>% group_by(Time, Disturbancy, Scenario) %>%
summarise(MortalityMean = mean(Mortality), MortalitySd = sd(Mortality))
ggplot(Mortality_AggT, aes(x=Time, y=MortalityMean, col=Disturbancy, group=Disturbancy)) +
geom_line()+
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
xlab("Time (years)") +
ylab("Mortality in biomass") +
ggtitle("Evolution of mortality due to disturbancies on different scenarios") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~Scenario, ncol=1)
ggplot(Mortality_Agg, aes(x=Disturbancy, y=MortalityMean, fill = Disturbancy)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
xlab("Type of disturbancy") +
ylab("Mortality in biomass") +
ggtitle("Total mortality by scenario") +
theme(plot.title = element_text(hjust = 0.5))+
facet_wrap(~Scenario, ncol=3)
shapiro.test(TestData$Harvest_BAU)
TestData = data.frame()
for (disturbance in c("Insects","Fire accidental", "Fire lightning", "Harvest")) {
for (scenario in ListScenario) {
Mort = Mortality$Mortality[Mortality$Disturbancy==disturbance &
Mortality$Scenario==scenario] %>%
as.numeric() %>% as.data.frame()
}
}
kable(as.data.frame(Mortality_Agg), caption = "Mortality depending on the scenario")
TestData = data.frame()
for (disturbance in c("Insects","Fire accidental", "Fire lightning", "Harvest")) {
for (scenario in ListScenario) {
Mort = Mortality$Mortality[Mortality$Disturbancy==disturbance &
Mortality$Scenario==scenario] %>%
as.numeric() %>% as.data.frame()
}
if (nrow(TestData) == 0) {
TestData = Mort
} else {
TestData = cbind(TestData, Mort)
}
}
kable(as.data.frame(Mortality_Agg), caption = "Mortality depending on the scenario")
View(TestData)
TestData = data.frame()
for (disturbance in c("Insects","Fire accidental", "Fire lightning", "Harvest")) {
for (scenario in ListScenario) {
Mort = Mortality$Mortality[Mortality$Disturbancy==disturbance &
Mortality$Scenario==scenario] %>%
as.numeric() %>% as.data.frame()
names(Mort) = paste0(disturbance,"_",scenario)
}
if (nrow(TestData) == 0) {
TestData = Mort
} else {
TestData = cbind(TestData, Mort)
}
}
kable(as.data.frame(Mortality_Agg), caption = "Mortality depending on the scenario")
shapiro.test(TestData$Harvest_BAU)
TestData = data.frame()
for (disturbance in c("Insects","Fire accidental", "Fire lightning", "Harvest")) {
for (scenario in ListScenario) {
Mort = Mortality$Mortality[Mortality$Disturbancy==disturbance &
Mortality$Scenario==scenario] %>%
as.numeric() %>% as.data.frame()
names(Mort) = paste0(disturbance,"_",scenario)
}
if (nrow(TestData) == 0) {
TestData = Mort
} else {
TestData = cbind(TestData, Mort)
}
}
j=(1:4)
TestData[ , j] = apply(TestData[ , j], 2,
function(x) as.numeric(as.character(x)))
kable(as.data.frame(Mortality_Agg), caption = "Mortality depending on the scenario")
shapiro.test(TestData$Harvest_BAU)
j=(1:4)
TestData[ , j] = apply(TestData[ , j], 2,
function(x) as.numeric(as.character(x)))
TestData = data.frame()
for (disturbance in c("Insects","Fire accidental", "Fire lightning", "Harvest")) {
for (scenario in ListScenario) {
Mort = Mortality$Mortality[Mortality$Disturbancy==disturbance &
Mortality$Scenario==scenario] %>%
as.numeric() %>% as.data.frame()
names(Mort) = paste0(disturbance,"_",scenario)
}
if (nrow(TestData) == 0) {
TestData = Mort
} else {
TestData = cbind(TestData, Mort)
}
}
j=(1:8)
TestData[ , j] = apply(TestData[ , j], 2,
function(x) as.numeric(as.character(x)))
TestData = data.frame()
for (disturbance in c("Insects","Fire accidental", "Fire lightning", "Harvest")) {
for (scenario in ListScenario) {
Mort = Mortality$Mortality[Mortality$Disturbancy==disturbance &
Mortality$Scenario==scenario] %>%
as.numeric() %>% as.data.frame()
names(Mort) = paste0(disturbance,"_",scenario)
}
if (nrow(TestData) == 0) {
TestData = Mort
} else {
TestData = cbind(TestData, Mort)
}
}
BAU_input =
"E:/FIF/Stage 3A/Extract/Documents/Klamath_(CA_only)_2021 - Harvest BAU/"
Adapty_input =
"E:/FIF/Stage 3A/Extract/Documents/Klamath_(CA_only)_2021 - Harvest Adaptability/"
ProAct_input =
"E:/FIF/Stage 3A/Extract/Documents/Klamath_(CA_only)_2021 - Harvest Pro-active/"
BAU_inputBM1 =
"E:/FIF/Stage 3A/Extract/Documents/Klamath_(CA_only)_2021 - Harvest BAU/..1/biomass/"
Adapty_inputBM1 =
"E:/FIF/Stage 3A/Extract/Documents/Klamath_(CA_only)_2021 - Harvest Adaptability/..1/biomass/"
ProAct_inputBM1 =
"E:/FIF/Stage 3A/Extract/Documents/Klamath_(CA_only)_2021 - Harvest Pro-active/..1/biomass/"
BAU_inputBM2 =
"E:/FIF/Stage 3A/Extract/Documents/Klamath_(CA_only)_2021 - Harvest BAU/..2/biomass/"
Adapty_inputBM2 =
"E:/FIF/Stage 3A/Extract/Documents/Klamath_(CA_only)_2021 - Harvest Adaptability/..2/biomass/"
ProAct_inputBM2 =
"E:/FIF/Stage 3A/Extract/Documents/Klamath_(CA_only)_2021 - Harvest Pro-active/..2/biomass/"
ListScenario = c("BAU","Adapty")#,"ProAct")
Mortality = data.frame()
for(j in c(1,2)){
if(j == 1) { run = "..1"
} else { run = "..2"}
for(scenario in ListScenario){
if(scenario == "BAU") {Input = BAU_input
} else if(scenario == "Adapty"){Input = Adapty_input
} else {Input = ProAct_input}
BDA_Tot = paste(Input, run, "/bda_log.csv",sep="") %>% read.csv()
BDA = cbind(BDA_Tot$Time, BDA_Tot$TotalBiomassMortality) %>% as.data.frame()
colnames(BDA) = c("Time", "Mortality")
BDA = aggregate(BDA$Mortality, by=list(Time=BDA$Time), FUN=sum)
colnames(BDA) = c("Time", "Mortality")
for(i in (1:100)){
if(!(i %in% BDA$Time)){
BDA = rbind(BDA, c(i,0))
}
}
BDA$Disturbancy = "Insects"
BDA$Scenario = scenario
BDA$Run = j
scrapple_Tot = paste(Input, run, "/scrapple-summary-log.csv", sep="") %>% read.csv()
scrapple_Acc = cbind(scrapple_Tot$SimulationYear,
scrapple_Tot$TotalBiomassMortalityAccidental) %>% as.data.frame()
colnames(scrapple_Acc) = c("Time", "Mortality")
scrapple_Acc$Disturbancy = "Fire accidental"
scrapple_Acc$Scenario = scenario
scrapple_Acc$Run = j
scrapple_Nat = cbind(scrapple_Tot$SimulationYear,
scrapple_Tot$TotalBiomassMortalityLightning) %>% as.data.frame()
colnames(scrapple_Nat) = c("Time", "Mortality")
scrapple_Nat$Disturbancy = "Fire lightning"
scrapple_Nat$Scenario = scenario
scrapple_Nat$Run = j
Harvest_Tot =  paste(Input, run, "/harvest/summary-log.csv",sep="") %>% read.csv()
Harvest = Harvest_Tot %>% group_by(Time) %>%
summarise(TotalBiomassHarvested = sum(TotalBiomassHarvested))
colnames(Harvest) = c("Time", "Mortality")
Harvest$Mortality = Harvest$Mortality %>% as.numeric()
Harvest$Mortality = Harvest$Mortality*100 # convertion Mg/ha in g/m²
Harvest$Disturbancy = "Harvest"
Harvest$Scenario = scenario
Harvest$Run = j
Mortality = rbind(Mortality, BDA, scrapple_Acc, scrapple_Nat, Harvest)
}
}
TestData = data.frame()
for (disturbance in c("Insects","Fire accidental", "Fire lightning", "Harvest")) {
for (scenario in ListScenario) {
Mort = Mortality$Mortality[Mortality$Disturbancy==disturbance &
Mortality$Scenario==scenario] %>%
as.numeric() %>% as.data.frame()
names(Mort) = paste0(disturbance,"_",scenario)
}
if (nrow(TestData) == 0) {
TestData = Mort
} else {
TestData = cbind(TestData, Mort)
}
}
j=(1:8)
TestData[ , j] = apply(TestData[ , j], 2,
function(x) as.numeric(as.character(x)))
TestData = data.frame()
for (disturbance in c("Insects","Fire accidental", "Fire lightning", "Harvest")) {
for (scenario in ListScenario) {
Mort = Mortality$Mortality[Mortality$Disturbancy==disturbance &
Mortality$Scenario==scenario] %>%
as.numeric() %>% as.data.frame()
names(Mort) = paste0(disturbance,"_",scenario)
if (nrow(TestData) == 0) {
TestData = Mort
} else {
TestData = cbind(TestData, Mort)
}
}
}
j=(1:8)
TestData[ , j] = apply(TestData[ , j], 2,
function(x) as.numeric(as.character(x)))
kable(as.data.frame(Mortality_Agg), caption = "Mortality depending on the scenario")
shapiro.test(TestData$Harvest_BAU)
shapiro.test(TestData$Harvest_Adapty)
shapiro.test(TestData$Harvest_ProAct)
shapiro.test(TestData$Harvest_BAU)
shapiro.test(TestData$Harvest_Adapty)
#shapiro.test(TestData$Harvest_ProAct)
wilcox.test(TestData$Harvest_BAU, TestData$Harvest_Adapty)
wilcox.test(TestData$Harvest_BAU, TestData$Harvest_ProAct)
#wilcox.test(TestData$Harvest_Adapty, TestData$Harvest_ProAct)
ggplot(Mortality_Agg[Mortality_Agg$Disturbancy=="Insects",], aes(x=Scenario, y=Mortality, fill=Scenario)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
ylab("Biomass killed") +
ggtitle("Insect outbreak by scenario") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(Mortality_Agg[Mortality_Agg$Disturbancy=="Harvest",], aes(x=Scenario, y=MortalityMean, fill=Scenario)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
ylab("Biomass removed") +
ggtitle("Harvest by scenario") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(Mortality_Agg[Mortality_Agg$Disturbancy=="Insects",], aes(x=Scenario, y=Mortality, fill=Scenario)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
ylab("Biomass killed") +
ggtitle("Insect outbreak by scenario") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(Mortality_Agg[Mortality_Agg$Disturbancy=="Insects",], aes(x=Scenario, y=MortalityMean, fill=Scenario)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
ylab("Biomass killed") +
ggtitle("Insect outbreak by scenario") +
theme(plot.title = element_text(hjust = 0.5))
#kable(as.data.frame(cbind(MorTable$Scenario[MorTable$Disturbancy=="Insects"],
#                          MorTable$Table[MorTable$Disturbancy=="Insects"])))
shapiro.test(TestData$Insects_BAU)
shapiro.test(TestData$Insects_Adapty)
#shapiro.test(TestData$Harvest_ProAct)
wilcox.test(TestData$Harvest_BAU, TestData$Insects_Adapty)
wilcox.test(TestData$Harvest_BAU, TestData$Insects_ProAct)
#wilcox.test(TestData$Harvest_Adapty, TestData$Harvest_ProAct)
ggplot(Mortality_Agg[Mortality_Agg$Disturbancy=="Fire accidental",], aes(x=Scenario, y=MortalityMean, fill=Scenario)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=MortalityMean-MortalitySd, ymax=MortalityMean+MortalitySd)) +
ylab("Biomass burned") +
ggtitle("Biomass burned accidentaly by scenario") +
theme(plot.title = element_text(hjust = 0.5))
shapiro.test(TestData$Fire.lightning_BAU)
shapiro.test(TestData$Fire.lightning_BAU)
shapiro.test(TestData$Fire lightning_BAU)
